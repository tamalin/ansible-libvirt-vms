---

_libvirt_images: /var/lib/libvirt/images

_vm_name: "{{ vm_config.name | default('suse-rnd') }}"
_vm_user: "{{ mgmt_user | default(vm_defaults.user) }}"
_vm_password_hash_old: >-
  {{ mgmt_password_hash |
     default((mgmt_password |
              default(vm_defaults.password)) |
             password_hash('sha512'))
  }}

_vm_password_hash: >-
  {%- if mgmt_password_hash is defined -%}
  {%-   set _passwd_hash = mgmt_password_hash -%}
  {%- elif mgmt_password is defined -%}
  {%-   set _passwd_hash = mgmt_password | password_hash('sha512') -%}
  {%- else -%}
  {%-   set _passwd_hash = vm_defaults.password | password_hash('sha512') -%}
  {%- endif -%}
  {{- _passwd_hash -}}

_def_disks:
  - name: 'scratch'
    size_gb: 100
    fstype: 'ext4'
    path: '/srv/scratch'

_vm_ssh_keys: >-
  {%- set _ssh_keys = [] -%}
  {%- set _ssh_key_files = [] -%}
  {%- if setup_ssh_key is defined -%}
  {%-   set _ = _ssh_key_files.append([setup_ssh_key.path.local, setup_ssh_key.files[1].file] | join('/')) -%}
  {%- endif -%}
  {%- if ssh_pub_keys is defined -%}
  {%-   set _ = _ssh_key_files.extend(ssh_pub_keys.files | default([])) -%}
  {%-   for _kc in ssh_pub_keys.strings | default([]) -%}
  {%-     set _ = _ssh_keys.append(_kc) -%}
  {%-   endfor -%}
  {%- endif -%}
  {%- for _kf in _ssh_key_files -%}
  {%-   set _ = _ssh_keys.append(lookup('file', _kf)) -%}
  {%- endfor -%}
  {%- set unique_ssh_keys = _ssh_keys | sort | unique -%}
  {{- unique_ssh_keys -}}

libvirt_vm:
  name: "{{ _vm_name }}"
  users:
    root:
      name: "root"
      password_hash: "{{ _vm_password_hash }}"
      ssh_keys: "{{ _vm_ssh_keys }}"
    mgmt:
      name: "{{ _vm_user }}"
      password_hash: "{{ _vm_password_hash }}"
      ssh_keys: "{{ _vm_ssh_keys }}"
  image:
    backing: "{{ _libvirt_images }}/{{ ubuntu_image.name }}"
    file: "{{ _libvirt_images }}/{{ _vm_name }}.qcow2"
    size_gb: "{{ vm_config.disk_size_gb | default(100) }}"
  ignition:
    file: "/tmp/{{ _vm_name }}.ign"
    template: "config.ign.j2"
  cloud_init:
    image: "{{ _libvirt_images }}/{{ _vm_name }}-cidata.iso"
    config_networking: "{{ create_network_config | default(True) }}"
    cleanup_tmpfiles: "{{ cleanup_cloud_init_tmpfiles | default(False) }}"
  os_variant: "{{ vm_config.os_variant | default('ubuntu-lts-latest') }}"
  hardware:
    ram_mb: "{{ vm_config.ram_mb | default('4096') }}"
    vcpus: "{{ vm_config.vcpus | default('4') }}"
    cpu_type: "{{ vm_config.cpu_type | default('host-passthrough') }}"
    machine: "{{ vm_config.machine_type | default('q35') }}"
    video: "{{ vm_config.video | default('vga') }}"
    bus: "{{ vm_config.disk_bus | default('scsi') }}"
  nics: "{{ vm_config.nics | default({'nettype': 'network', 'netdev': 'default'}) }}"
  tpm:
    version: "{{ vm_config.tpm.version | default('2.0') }}"
    model: "{{ vm_config.tpm.model | default('tpm-tis') }}"
  extra_disks: "{{ vm_config.extra_disks | default(_def_disks) }}"
